name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Lint (ruff)
        run: ruff check .

      - name: Format check (black)
        run: black --check .

      - name: Security audit (Bandit)
        run: |
          python -m pip install --upgrade pip
          pip install bandit
          bandit -r src -ll
        continue-on-error: true

      - name: Dependency audit (pip-audit)
        run: |
          python -m pip install --upgrade pip
          pip install pip-audit
          pip-audit
        continue-on-error: true

      - name: Shell lint (shellcheck) - Legacy scripts
        run: |
          sudo apt-get install -y shellcheck
          if [ -f legacy/extract_audio.sh ]; then shellcheck legacy/extract_audio.sh; fi
        continue-on-error: true

      - name: Run tests with coverage
        env:
          # Avoid hitting external services; tests shouldn't require this
          DEEPGRAM_API_KEY: dummy_test_key
          PYTEST_DISABLE_PLUGIN_AUTOLOAD: "1"
        run: |
          pytest --cov=src --cov-branch --cov-report=xml --cov-report=term-missing --cov-fail-under=75

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: coverage.xml
          # Public repo: token not required; do not fail CI if upload fails
          fail_ci_if_error: false
