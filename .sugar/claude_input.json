{
  "task_type": "feature",
  "title": "Add FFmpeg core tests (CRITICAL - untested production code)",
  "description": "{\n  \"priority\": 5,\n  \"type\": \"test\",\n  \"context\": \"src/services/ffmpeg_core.py (57 LOC) has ZERO tests. Builds FFmpeg commands for all audio extraction. Wrong command = corrupted audio or silent failures.\",\n  \"business_context\": \"Critical path untested. High risk of command injection, path errors, quality issues.\",\n  \"technical_requirements\": [\n    \"Create tests/unit/test_ffmpeg_core.py\",\n    \"Test command construction for each quality preset (SPEECH, STANDARD, HIGH, COMPRESSED)\",\n    \"Test SPEECH quality two-step pipeline (extract + normalize)\",\n    \"Test path escaping with spaces/special chars\",\n    \"Test output path permission handling\",\n    \"Verify -y flag present (prevent hangs)\"\n  ],\n  \"success_criteria\": [\n    \"All quality presets tested\",\n    \"Path injection prevention verified\",\n    \"SPEECH normalization tested\",\n    \"100% coverage of ffmpeg_core.py\",\n    \"Tests prevent regression bugs\"\n  ]\n}",
  "execution_mode": "ExecutionMode.AGENT",
  "agent_type": "AgentType.GENERAL_PURPOSE",
  "agent_fallback": true,
  "context": {
    "work_item_id": "0c235668-be94-4aaa-a208-fd85bf614b8c",
    "source_type": "cli",
    "priority": 3,
    "attempts": 1,
    "files_involved": null,
    "repository_info": null,
    "previous_attempts": null,
    "session_context": {
      "added_via": "sugar_cli",
      "timestamp": "2025-10-26T16:46:00.030427",
      "parsed_description": {
        "priority": 5,
        "type": "test",
        "context": "src/services/ffmpeg_core.py (57 LOC) has ZERO tests. Builds FFmpeg commands for all audio extraction. Wrong command = corrupted audio or silent failures.",
        "business_context": "Critical path untested. High risk of command injection, path errors, quality issues.",
        "technical_requirements": [
          "Create tests/unit/test_ffmpeg_core.py",
          "Test command construction for each quality preset (SPEECH, STANDARD, HIGH, COMPRESSED)",
          "Test SPEECH quality two-step pipeline (extract + normalize)",
          "Test path escaping with spaces/special chars",
          "Test output path permission handling",
          "Verify -y flag present (prevent hangs)"
        ],
        "success_criteria": [
          "All quality presets tested",
          "Path injection prevention verified",
          "SPEECH normalization tested",
          "100% coverage of ffmpeg_core.py",
          "Tests prevent regression bugs"
        ]
      },
      "description_format": "json"
    }
  },
  "timestamp": "2025-10-26T17:32:20.482746",
  "sugar_version": "2.1.0",
  "continue_session": false,
  "timeout_seconds": 1800,
  "working_directory": null
}